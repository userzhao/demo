hello world!


一、建立本地仓库
1.初始化
	git init   
2.添加到本地仓库
	git add  xxx.xx 
	git add  *  所有
3.输入本次的提交说明，准备提交暂存区中的更改的已跟踪文件，单引号内为说明内容
	git commit -m "提交说明" 
二、关联github仓库
	//新建一个repository时会出现下面的代码，直接复制即可
    git remote add origin https://github.com/CongliYin/CSS.git
	如果出现错误：fatal: remote origin already exists，则执行以下语句：
	git remote rm origin
	git remote add origin https://github.com/CongliYin/CSS.git
	如果出现错误failed to push som refs to…….，则执行以下语句，先把远程服务器github上面的文件拉先来，再push 上去。：
	git pull origin master  拉取
	git push origin master  上传
	
	
GitHub和Git入门
考虑到大家以前可能对版本控制工具和Linux命令行工具都不了解，我写了一个简单的博客来让大家学会入门使用方法。

GitHub的简单使用
第一步 创建GitHub账号
1. 打开GitHub官网。
2. 点击绿色按钮Sign up for GitHub，填写用户名，邮件地址和密码。
注意：

用户名只能包含字母和"-"字符
密码至少包含一个字母，一个数字和七个字符
3. 点击绿色按钮Create an account，创建账号。


4. 在下一个页面点击绿色按钮Finish sign完成注册。


现在，你的GitHub账号就创建好了。请先在你的注册邮箱中完成邮件验证，然后可以看看GitHub提供的新手文档，我们也提供了这一文档的中文版。

第二步 创建一个GitHub开发者应用
1. 点击右上角你的头像，在下拉菜单中选择Settings。


2. 在左边的Personal settings(个人设置)中选择OAuth applications，再在右侧选择Developer applications。


3. 点击上图中的绿色按钮Register a new application，填写应用名称，你的主页，应用描述和回调URL。


4. 点击上图中的绿色按钮Register applciation注册应用，注册成功后，记住下一页中的Client ID和Client Secret值。


OK，现在你就可以使用此Client ID和Client Secret做GitHub三方登录了。

Git的简单使用
第一步 下载Git for Windows
1. 在官网点击Download，下载对应的exe文件，注意你的操作系统是32位还是64位。
2. 双击安装，中间不用做任何改动，一直下一步就行。如果你想修改安装位置，请放在纯英文路径下。
3. 安装成功，你现在就可以使用git命令行工具了。在你想要下载代码的路径，点击鼠标右键，选择Git Bash here。注意，你的代码路径也应是纯英文的。
4. Git Bash使用的是MinGW，其界面如下图所示：


第二步 创建一个本地hello-world仓库
1. 在命令行输入 mkdir hello-word，创建一个新文件夹。你可以使用ls命令来查看当前目录下有哪些文件和文件夹。
2. 输入cd hello-world进入新文件夹，注意在输入命令时，你可以用Tab键来自动补全。
3. 输入git init初始化Git仓库。此时用ls -a查看当前目录，可以看到多了一个.git/的文件夹，此文件夹保存了版本控制的所有相关信息。


注意，在此处使用的所有命令，如果你是在Linux环境下开发，用法都是完全一样的。所以对于完全没有Linux使用经验的学员，这也是一个开始接触Linux工作方式的好方法。

接下来，让我们创建一份简单的说明文件，并提交到版本库中。

4. 输入echo "This is a simple practise" > readme.txt，创建一个readme.txt文件。
5. 输入git status查看当前版本库状态，在Untracked files(未跟踪文件)下，会出现红色的readme.txt，代表此文件还未被Git所管理。


6. 使用git add readme.txt，将该文件加入缓冲区，如果你确定所有的修改都需要提交，可以使用git add .来加入所有修改。现在用git status查看，将看到文件名变为绿色。
7. 使用git commit -m "This is my first commit via Git!"来提交修改，-m后面所带的参数是本次提交信息，一般用来记录本次提交的主要意图。


8. 提交成功后，可以用git log查看历史提交记录。每个记录都会有提交id，作者和提交日期。
9. 你可以用git branch查看当前有哪些分支，当然，因为我们没有创建任何分支，目前只会有一个master分支。
10. 使用git checkout -b feature创建一个名为feature的分支，再用git branch查看一下。


以上是最最基本的Git操作，大家可以在此hello-world项目中随意尝试各种其他Git命令，最好的参考资料是Pro Git book。

注意：学会Git的唯一方式是在实际使用中学习，切记不要尝试先记住一大堆理论知识或者Git命令。

项目的下载，查看和修改
第一步. 从GitHub上下载我们的项目代码。
1. 以Hello-World项目为例，点击绿色按钮Clone or download，然后在弹出窗口中点击剪切板图标，复制仓库的URL。


2. 在git bash中输入git clone https://github.com/feicui-android/Hello-World.git，下载项目源码。
第二步. 查看版本历史
1. cd到项目文件夹下，使用git log能看到我们的历史提交记录。
2. 要回到某一历史版本，可以使用git checkout commitId，看完后要回到最新代码，使用git checkout master。
第三步. 本地修改代码
你可以在我们的代码基线上任意修改，但为了下载新代码时不出现冲突，请遵循以下步骤：

1. 下载新代码：git pull。
2. 从master出捡出一个新的分支：git checkout -b feature。feature是分支名称，你可以随意取名，但请用英文。
3. 在feature分支上随意修改，改完后你可以提交你的修改：git commit -m "some message"。
4. 此时要同步代码，请先切回主分支：git checkout master，然后更新git pull。
5. 如果想删除自己建立的分支，使用git branch -D feature，注意执行此命令后分支被强制删除，无法恢复。
--------------------- 
作者：FynnJason 
来源：CSDN 
原文：https://blog.csdn.net/JavaAndroid730/article/details/53522872 
版权声明：本文为博主原创文章，转载请附上博文链接！	